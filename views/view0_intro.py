import streamlit as st
from data import load_data
import pandas as pd
import plotly.express as px



st.title("üìä K√∂zbeszerz√©si elemz√©s")  

st.markdown(  
    """Ebben az alkalmaz√°sban a k√∂zbeszerz√©sek adatait elemzem, egys√©ges√≠tett √©s k√∂nnyen √∂sszehasonl√≠that√≥ form√°ban.  

## Az adatok forr√°sa az [Elektronikus K√∂zbeszerz√©si Rendszer]('https://ekr.gov.hu/ekr-szerzodestar/hu/szerzodesLista') honlapja.
"""
)  

@st.fragment
def display_main_numbers():
    data = load_data()
    st.header("F≈ë mutat√≥sz√°mok")

    col1, col2, col3, col4 = st.columns(4)

    # √ñsszes p√°ly√°zat
    with col1:
        st.metric("√ñsszes p√°ly√°zat", data['ekrAzonosito'].nunique())

    # √ñsszes kifizetett √∂sszeg
    with col2:
        if 'nettoOsszegHUF' in data.columns:
            total_amount = data['nettoOsszegHUF'].sum()
            st.metric("√ñsszes kifizet√©s (HUF)", f"{total_amount:,.0f}".replace(",", " "))

    # Aj√°nlattev≈ëk sz√°ma
    with col3:
        if 'ajanlat_tevok_szama' in data.columns:
            avg_bidders = data['ajanlat_tevok_szama'].mean()
            st.metric("√Åtlagos aj√°nlattev≈ëk sz√°ma", f"{avg_bidders:.2f}")

    # √Åtlagos szerz≈ëd√©s √∂sszeg
    with col4:
        if 'nettoOsszegHUF' in data.columns:
            avg_amount = data['nettoOsszegHUF'].mean()
            st.metric("√Åtlagos szerz≈ëd√©s √∂sszeg (HUF)", f"{avg_amount:,.0f}".replace(",", " "))


    data['year_month'] = data['tam_dont_datum'].dt.to_period('M')
    grouped_df = (
        data
        .groupby(['year_month'], as_index=False)
        .agg(
            megitelt_tamogatas=('nettoOsszegHUF', 'sum'),
            number_of_projects=('ekrAzonosito', 'count')
        )
        .reset_index()
    )
    grouped_df['megitelt_tamogatas'] = (grouped_df['megitelt_tamogatas'] / 1_000_000_000).round(2)
    grouped_df['year_month'] = grouped_df['year_month'].astype(str)

    fig = px.bar(
        grouped_df,
        x='year_month',
        y='megitelt_tamogatas',
        title='',
        labels={'year_month': 'D√°tum', 'megitelt_tamogatas': 'Meg√≠t√©lt √∂sszeg (milli√°rd Ft)'},
        barmode='group'
    )

    fig.update_layout(
        barmode='stack',
        plot_bgcolor='white',
        xaxis_title=' ',
        yaxis_title='Meg√≠t√©lt √∂sszeg (milli√°rd Ft)',
        legend_title=' ',
        height=800,
        legend=dict(
            orientation="h",
            yanchor="middle",
            y=1.02, 
            xanchor="center",
            x=0.5, 
            title_font=dict(size=12), 
            font=dict(size=10)

        )
    )


    st.write("Az al√°bbi √°bra a meg√≠t√©lt k√∂zbeszerz√©sek √∂sszeg√©t mutatja havonta.")
    st.plotly_chart(fig)



# same pie chart by value calculated from nettoosszeghuf

    col1, col2 = st.columns(2)
    with col1:
        st.subheader("Uni√≥s forr√°sb√≥l finansz√≠rozott projektek (nett√≥ √∂sszeg)")
        
        if 'uniosForrasbolFinanszirozott' in data.columns and 'nettoOsszegHUF' in data.columns:
            unios_counts = data.groupby('uniosForrasbolFinanszirozott')['nettoOsszegHUF'].sum().reset_index()
            unios_counts.columns = ['Uni√≥s forr√°s', '√ñsszeg']
            unios_counts['Uni√≥s forr√°s'] = unios_counts['Uni√≥s forr√°s'].map({True: 'Igen', False: 'Nem'})
            
            fig = px.pie(
                unios_counts,
                values='√ñsszeg',
                names='Uni√≥s forr√°s',
                title="Uni√≥s forr√°sb√≥l finansz√≠rozott projektek ar√°nya (nett√≥ √∂sszeg)"
            )
            st.plotly_chart(fig, use_container_width=True)
    with col2:
        st.subheader("Szerz≈ëd√©s t√≠pusai (nett√≥ √∂sszeg)")
        
        if 'tipusaNev' in data.columns and 'nettoOsszegHUF' in data.columns:
            type_counts = data.groupby('tipusaNev')['nettoOsszegHUF'].sum().reset_index()
            type_counts.columns = ['T√≠pus', '√ñsszeg']
            
            fig = px.pie(
                type_counts,
                values='√ñsszeg',
                names='T√≠pus',
                title="Szerz≈ëd√©sek t√≠pus szerinti megoszl√°sa (nett√≥ √∂sszeg)"
            )
            # format the values in the pie chart
            fig.update_traces(textinfo='percent+label', textfont_size=12)
            fig.update_layout(title_font_size=20)   
            st.plotly_chart(fig, use_container_width=True)


display_main_numbers()



st.markdown(
    """      
## üîç Hogyan k√©sz√ºlt az adatb√°zis?  


‚úîÔ∏è **Minden k√∂zbeszerz√©s √©rt√©k√©t forintra v√°ltottam**, ha az eredetileg m√°s deviz√°ban szerepelt.  
&nbsp;&nbsp;&nbsp;‚ûù Az √°tv√°lt√°s mindig **az adott napi √°rfolyamon** t√∂rt√©nt, amikor a k√∂zbeszerz√©st kihirdett√©k.  

‚úîÔ∏è **Brutt√≥b√≥l nett√≥ sz√°m√≠t√°s**  
&nbsp;&nbsp;&nbsp;‚ûù Ha az √∂sszeg nett√≥ban volt megadva,akkor azt vettem figyelembe.  

‚ûù Ha az √∂sszeg brutt√≥ban volt megadva, **a 27%-os √°f√°t levonva nett√≥s√≠tottam** (osztva 1,27-tel).  

## üìà Mit tal√°lsz itt?  

üìå **Egys√©ges p√©nz√ºgyi adatok** minden k√∂zbeszerz√©sr≈ël.  
üìå **Automatikusan √°tv√°ltott √©rt√©kek**, hogy k√∂nnyebb legyen az √∂sszehasonl√≠t√°s.  
üìå **Tiszt√≠tott √©s strukt√∫r√°lt inform√°ci√≥k**, a pontos elemz√©s √©rdek√©ben.  

üîé **B√∂ng√©ssz az adatok k√∂z√∂tt, √©s fedezd fel az √©rdekess√©geket!** üöÄ  
"""
)  



